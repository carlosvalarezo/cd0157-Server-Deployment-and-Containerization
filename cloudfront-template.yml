AWSTemplateFormatVersion: '2010-09-09'

Parameters:

  EksClusterName:
    Description: The name of the EKS cluster already created
    Type: String
    Default: CLUSTER_NAME
    ConstraintDescription: You must enter the EKS cluster name

<<<<<<< HEAD
  EksClusterRoleArn:
    Description: The name of the EKS cluster role already created
    Type: String
    Default: CLUSTER_ROLE_ARN
    ConstraintDescription: You must enter the EKS cluster role arn

  AwsAccessKeyId:
    Description: The AwsAccessKeyId value
    Type: String
    NoEcho: true
    Default: _AWS_ACCESS_KEY_ID
=======
  AwsAccessKeyId:
    Description: The AwsAccessKeyId value
    Type: AWS::SSM::Parameter::Value<String>
    Default: _AWS_ACCESS_KEY_ID
    NoEcho: true
>>>>>>> ff8d780 (imports the AWS creds from github and inserts them as ssm value in order to download the kube config file from the cluster in codebuild rather than in the github action workflow. It also skips two steps in the github action workflow in order to keep that code as future reference)
    ConstraintDescription: You must enter the AWS Key ID

  AwsSecretAccessKey:
    Description: The AwsSecretAccessKey value
<<<<<<< HEAD
    Type: String
    NoEcho: true
    Default: _AWS_SECRET_ACCESS_KEY
=======
    Type: AWS::SSM::Parameter::Value<String>
    Default: _AWS_SECRET_ACCESS_KEY
    NoEcho: true
>>>>>>> ff8d780 (imports the AWS creds from github and inserts them as ssm value in order to download the kube config file from the cluster in codebuild rather than in the github action workflow. It also skips two steps in the github action workflow in order to keep that code as future reference)
    ConstraintDescription: You must enter the AWS Secret Access Key

  AwsRegion:
    Description: The AwsRegion value
<<<<<<< HEAD
    Type: String
    NoEcho: true
    Default: _AWS_REGION
=======
    Type: AWS::SSM::Parameter::Value<String>
    Default: _AWS_REGION
    NoEcho: true
>>>>>>> ff8d780 (imports the AWS creds from github and inserts them as ssm value in order to download the kube config file from the cluster in codebuild rather than in the github action workflow. It also skips two steps in the github action workflow in order to keep that code as future reference)
    ConstraintDescription: You must enter the AWS Region

  ClusterRoleName:
    Description: The name of role to access to the EKS cluster
    Type: String
    Default: CLUSTER_ROLE_NAME
    ConstraintDescription: You must enter the EKS cluster role name

  GitSourceRepo:
    Description: GitHub source repository - must contain a Dockerfile and buildspec.yml in the base
    Type: String
    Default: SOURCE_REPOSITORY
    ConstraintDescription: You must enter a GitHub repository name

  GitBranch:
    Description: GitHub git repository branch - change triggers a new build
    Type: String
    NoEcho: true
    MinLength: 1
    MaxLength: 20
    Default: develop
    ConstraintDescription: You must enter a GitHub repository branch name

  GitHubToken:
    Description: GitHub API token - see https://github.com/blog/1509-personal-api-tokens
    Type: String
    Default: GITHUB_TOKEN
    ConstraintDescription: You must enter a GitHub personal access token

  GitHubUser:
    Description: GitHub username or organization
    Type: String
    Default: GITHUB_USER
    ConstraintDescription: You must enter a GitHub username or organization

  CodePipelineRoleArn:
    Description: Role to be used by codepipeline
    Type: String
    Default: CODEPIPELINE_ROLE_ARN
    ConstraintDescription: You must enter a role name

  CodeBuildRoleArn:
    Description: Role to be used by codebuild
    Type: String
    Default: CODEBUILD_ROLE_ARN
    ConstraintDescription: You must enter a role name

  DockerUserName:
    Description: Username to access docker.io
    Type: String
    Default: DOCKER_USERNAME
    ConstraintDescription: You must enter a username

  DockerToken:
    Description: Token to access docker.io
    Type: String
    Default: DOCKER_TOKEN
    ConstraintDescription: You must enter a token

  JWTToken:
    Description: Passphrase used to cypher/decypher the content of the JWT
    Type: String
    Default: JWT_TOKEN
    ConstraintDescription: You must enter a JWT token value

  ArtifactBucketName:
    Description: Name for the artifact S3 bucket
    Type: String
    Default: cv-codepipeline-artifacts-bucket

  Environment:
    Description: Environments to deploy the app
    Type: String
    Default: develop
    AllowedValues:
      - develop
      #- production

Resources:
  CodeBuild:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: cv-codebuild
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: aws/codebuild/standard:4.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: DOCKER_USERNAME
            Value: !Ref DockerUserName
          - Name: DOCKER_TOKEN
            Value: !Ref DockerToken
          - Name: CLUSTER_NAME
            Value: !Ref EksClusterName
          - Name: CLUSTER_ROLE_NAME
            Value: !Ref ClusterRoleName
          - Name: ENVIRONMENT
            Value: !Ref Environment
          - Name: REPOSITORY_NAME
            Value: !Ref GitSourceRepo
          - Name: REPOSITORY_BRANCH
            Value: !Ref GitBranch
          - Name: REPOSITORY_URI
            Value: docker.io
          - Name: JWT_SECRET
            Value: !Ref JWTToken
          - Name: AWS_SECRET_ACCESS_KEY
            Value: !Ref AwsSecretAccessKey
          - Name: AWS_ACCESS_KEY_ID
            Value: !Ref AwsAccessKeyId
          - Name: AWS_REGION
            Value: !Ref AwsRegion
      ServiceRole: !Ref CodeBuildRoleArn
      Artifacts:
        Type: CODEPIPELINE
        Name: MyBuildOutput

  CodePipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Stages:
        - Name: cv-codepipeline
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitSourceRepo
                Branch: !Ref GitBranch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: SourceOutput
<<<<<<< HEAD
        - Name: BuildStage
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuild
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
      ArtifactStores:
        - Region: !Ref AwsRegion
          ArtifactStore:
            Type: S3
            Location: cv-codepipeline-artifacts-bucket
      RoleArn: !Ref CodePipelineRoleArn
=======
      RoleArn: !Ref CodePipelineRoleName

  CodeBuild:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: cv-codebuild
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: aws/codebuild/standard:4.0
        EnvironmentVariables:
          - Name: DOCKER_USERNAME
            Value: !Ref DockerUserName
          - Name: DOCKER_TOKEN
            Value: !Ref DockerToken
          - Name: KUBE_CONFIG
            Value: !Ref KubeConfig
          - Name: CLUSTER_NAME
            Value: !Ref EksClusterName
          - Name: CLUSTER_ROLE_NAME
            Value: !Ref ClusterRoleName
          - Name: ENVIRONMENT
            Value: !Ref Environment
          - Name: REPOSITORY_NAME
            Value: !Ref GitSourceRepo
          - Name: REPOSITORY_BRANCH
            Value: !Ref GitBranch
          - Name: REPOSITORY_URI
            Value: docker.io
          - Name: JWT_SECRET
            Value: !Ref JWTToken
          - Name: AWS_SECRET_ACCESS_KEY
            Value: !Ref AwsSecretAccessKey
          - Name: AWS_ACCESS_KEY_ID
            Value: !Ref AwsAccessKeyId
          - Name: AWS_REGION
            Value: !Ref AwsRegion
      ServiceRole: !Ref CodeBuildRoleName
      Artifacts:
        Type: CODEPIPELINE
        Name: MyBuildOutput
>>>>>>> ff8d780 (imports the AWS creds from github and inserts them as ssm value in order to download the kube config file from the cluster in codebuild rather than in the github action workflow. It also skips two steps in the github action workflow in order to keep that code as future reference)
